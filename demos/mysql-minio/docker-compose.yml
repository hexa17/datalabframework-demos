version: '2'
services:
  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - ./volumes/mysql:/var/lib/mysql
      - ./mysql/data:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: root

  jupyter:
    image: natbusa/datalabframework-develop
    command: start.sh jupyter lab
    volumes:
      - ./jupyter:/home/jovyan/demo
    environment:
      SPARK_OPTS: '--master=spark://spark-master:7077'
    ports:
      - 8888:8888

  spark-master:
    image: natbusa/pyspark-notebook
    command: /usr/local/spark/bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
    hostname: spark-master
    environment:
      MASTER: spark://spark-master:7077
      SPARK_PUBLIC_DNS: localhost
    ports:
      - 7077:7077
      - 8080:8080
    volumes:
      - ./volumes/spark/master/data:/tmp/data

  spark-worker-1:
    image: natbusa/pyspark-notebook
    command: /usr/local/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    hostname: spark-worker-1
    environment:
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
      SPARK_PUBLIC_DNS: localhost
    ports:
      - 8081:8081
    volumes:
      - ./volumes/spark/worker-1/data:/tmp/data
      - ./volumes/spark/worker-1/work:/usr/local/spark/work

  spark-worker-2:
    image: natbusa/pyspark-notebook
    command: /usr/local/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    hostname: spark-worker-2
    environment:
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
      SPARK_PUBLIC_DNS: localhost
    ports:
      - 8082:8081
    volumes:
      - ./volumes/spark/worker-2/data:/tmp/data
      - ./volumes/spark/worker-2/work:/usr/local/spark/work

  minio-1:
    image: minio/minio:RELEASE.2018-09-12T18-49-56Z
    volumes:
      - ./volumes/minio/1/data:/data
      - ./volumes/minio/1/config:/root/.minio
    ports:
      - "9001:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server  http://minio-1/data http://minio-2/data http://minio-3/data  http://minio-4/data

  minio-2:
    image: minio/minio:RELEASE.2018-09-12T18-49-56Z
    volumes:
      - ./volumes/minio/2/data:/data
      - ./volumes/minio/2/config:/root/.minio
    ports:
      - "9002:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server  http://minio-1/data http://minio-2/data http://minio-3/data  http://minio-4/data

  minio-3:
    image: minio/minio:RELEASE.2018-09-12T18-49-56Z
    volumes:
      - ./volumes/minio/3/data:/data
      - ./volumes/minio/3/config:/root/.minio
    ports:
      - "9003:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server  http://minio-1/data http://minio-2/data http://minio-3/data  http://minio-4/data

  minio-4:
    image: minio/minio:RELEASE.2018-09-12T18-49-56Z
    volumes:
      - ./volumes/minio/4/data:/data
      - ./volumes/minio/4/config:/root/.minio
    ports:
      - "9004:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server  http://minio-1/data http://minio-2/data http://minio-3/data http://minio-4/data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio-1
    entrypoint: >
      /bin/sh -c "
      echo waiting for minio service to start...;
      while ! nc -z minio-1 9000 </dev/null; do sleep 10; done;
      echo minio started;
      echo creating buckets;
      /usr/bin/mc config host add myminio http://minio-1:9000 minio minio123;
      /usr/bin/mc rm -r --force myminio/ingest;
      /usr/bin/mc mb myminio/ingest;
      exit 0;
      "
